{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000';\n  }\n  getData() {\n    return this.http.get(`${this.apiUrl}/data`);\n  }\n  getLoginInfo() {\n    return this.http.get(`${this.apiUrl}/login_info`);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});\nexport class SearchService {\n  constructor(http) {\n    this.http = http;\n    this.apiKey = 'YOUR_API_KEY';\n    this.cx = 'YOUR_CX';\n  }\n  search(query) {\n    const url = `https://www.googleapis.com/customsearch/v1?key=${this.apiKey}&cx=${this.cx}&q=${query}`;\n    return this.http.get(url);\n  }\n}","map":{"version":3,"mappings":";;AAQA,OAAM,MAAOA,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,WAAM,GAAG,uBAAuB;EAEO;EAEvCC,OAAO;IACL,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,GAAG,IAAI,CAACC,MAAM,OAAO,CAAC;EAClD;EAEAC,YAAY;IACV,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAC,GAAG,IAAI,CAACC,MAAM,aAAa,CAAC;EACnD;;AAXWL,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAO,SAAVP,UAAU;EAAAQ,YAHT;AAAM;AAiBpB,OAAM,MAAOC,aAAa;EAIxBR,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAHhB,WAAM,GAAG,cAAc;IACvB,OAAE,GAAG,SAAS;EAEkB;EAExCQ,MAAM,CAACC,KAAa;IAClB,MAAMC,GAAG,GAAG,kDAAkD,IAAI,CAACC,MAAM,OAAO,IAAI,CAACC,EAAE,MAAMH,KAAK,EAAE;IACpG,OAAO,IAAI,CAACT,IAAI,CAACE,GAAG,CAACQ,GAAG,CAAC;EAC3B","names":["ApiService","constructor","http","getData","get","apiUrl","getLoginInfo","factory","providedIn","SearchService","search","query","url","apiKey","cx"],"sourceRoot":"","sources":["C:\\Users\\Bryce\\Documents\\MyGroupProject\\src\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\n\nexport class ApiService {\n  apiUrl = 'http://localhost:3000';\n\n  constructor(private http: HttpClient) {}\n\n  getData(): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/data`);\n  }\n\n  getLoginInfo(): Observable<any> {\n    return this.http.get(`${this.apiUrl}/login_info`);\n  }\n}\n\nexport class SearchService {\n  private apiKey = 'YOUR_API_KEY';\n  private cx = 'YOUR_CX';\n\n  constructor(private http: HttpClient) { }\n\n  search(query: string) {\n    const url = `https://www.googleapis.com/customsearch/v1?key=${this.apiKey}&cx=${this.cx}&q=${query}`;\n    return this.http.get(url);\n  }\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}