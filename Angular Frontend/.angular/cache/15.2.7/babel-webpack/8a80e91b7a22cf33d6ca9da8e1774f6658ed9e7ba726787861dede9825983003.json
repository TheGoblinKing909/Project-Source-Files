{"ast":null,"code":"import { HttpHeaders } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\nexport class ApiService {\n  constructor(http) {\n    this.http = http;\n    this.apiUrl = 'http://localhost:3000';\n  }\n  getData() {\n    return this.http.get(`${this.apiUrl}/data`);\n  }\n  insertDomain(domainName) {\n    const url = `${this.apiUrl}/domains`;\n    const payload = {\n      domainName\n    };\n    return this.http.post(url, payload, httpOptions);\n  }\n}\nApiService.ɵfac = function ApiService_Factory(t) {\n  return new (t || ApiService)(i0.ɵɵinject(i1.HttpClient));\n};\nApiService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ApiService,\n  factory: ApiService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"mappings":"AACA,SAAqBA,WAAW,QAAQ,sBAAsB;;;AAG9D,MAAMC,WAAW,GAAG;EAClBC,OAAO,EAAE,IAAIF,WAAW,CAAC;IACvB,cAAc,EAAE;GACjB;CACF;AAKD,OAAM,MAAOG,UAAU;EAGrBC,YAAoBC,IAAgB;IAAhB,SAAI,GAAJA,IAAI;IAFxB,WAAM,GAAG,uBAAuB;EAEO;EAEvCC,OAAO;IACL,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAM,GAAG,IAAI,CAACC,MAAM,OAAO,CAAC;EAClD;EAEAC,YAAY,CAACC,UAAkB;IAC7B,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACH,MAAM,UAAU;IACpC,MAAMI,OAAO,GAAG;MAAEF;IAAU,CAAE;IAC9B,OAAO,IAAI,CAACL,IAAI,CAACQ,IAAI,CAACF,GAAG,EAAEC,OAAO,EAAEX,WAAW,CAAC;EAClD;;AAbWE,UAAU;mBAAVA,UAAU;AAAA;AAAVA,UAAU;SAAVA,UAAU;EAAAW,SAAVX,UAAU;EAAAY,YAFT;AAAM","names":["HttpHeaders","httpOptions","headers","ApiService","constructor","http","getData","get","apiUrl","insertDomain","domainName","url","payload","post","factory","providedIn"],"sourceRoot":"","sources":["C:\\Users\\Bryce\\Documents\\MyGroupProject\\src\\api.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\nimport { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Observable } from 'rxjs';\n\nconst httpOptions = {\n  headers: new HttpHeaders({\n    'Content-Type': 'application/json'\n  })\n};\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ApiService {\n  apiUrl = 'http://localhost:3000';\n\n  constructor(private http: HttpClient) {}\n\n  getData(): Observable<any> {\n    return this.http.get<any>(`${this.apiUrl}/data`);\n  }\n\n  insertDomain(domainName: string): Observable<any> {\n    const url = `${this.apiUrl}/domains`;\n    const payload = { domainName };\n    return this.http.post(url, payload, httpOptions);\n  }\n\n}"]},"metadata":{},"sourceType":"module","externalDependencies":[]}